version: "3.2"
services:
  eolo_server:
    container_name: eolo_server
    build: .
    user: "node"
    env_file:
     - .env
    environment:
     - NODE_ENV=production
     - REDIS_HOST=${REDIS_HOST}
     - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
        - "${NODE_PORT}:${NODE_PORT}"
    # volumes:
    #     - ${PWD}:/home/node/project
    # working_dir: /home/node/project
    networks:
      app_net:
        ipv4_address: 172.16.250.10
    restart: always

  eolo_worker:
    container_name: eolo_worker
    build: .
    user: "node"
    env_file:
     - .env
    environment:
     - NODE_ENV=production
     - REDIS_HOST=${REDIS_HOST}
     - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: "node --experimental-specifier-resolution=node ./dist/worker.js"
    # volumes:
    #     - ${PWD}:/home/node/project
    # working_dir: /home/node/project
    networks:
      app_net:
        ipv4_address: 172.16.250.11
    restart: always
    depends_on:
      - redis

  redis:
    container_name: redis-container
    image: "redis:alpine"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
     - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_REPLICATION_MODE=master
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      # save redisearch data to your current working directory
      - ./redis-data:/data
    command:
      # Save if 100 keys are added in every 10 seconds
      - "--save 10 100"
      # Set password
      - "--requirepass ${REDIS_PASSWORD}"
    networks:
      app_net:
        ipv4_address: 172.16.250.42

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -   subnet: 172.16.250.0/24
volumes:
  redis-data:
