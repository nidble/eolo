x-app: &default-app
  build: .
  user: "node"
  env_file:
  - .env
  environment:
  - NODE_ENV=production
  - REDIS_HOST=${REDIS_HOST}
  - REDIS_PASSWORD=${REDIS_PASSWORD}
  volumes:
    - ${PWD}/${UPLOADS_FOLDER}:/app/${UPLOADS_FOLDER}
  stop_grace_period: "3s"
  tty: true
  depends_on:
    - redis

services:
  eolo_server:
    <<: *default-app
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:${NODE_PORT}/healthz}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_SERVER_CPUS:-0}"
          memory: "${DOCKER_SERVER_MEMORY:-0}"

  eolo_worker:
    <<: *default-app
    command: "node --experimental-specifier-resolution=node ./dist/worker.js"

  redis:
    container_name: redis-container
    image: "redis:alpine"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
     - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_REPLICATION_MODE=master
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      # save redisearch data to your current working directory
      - ./redis-data:/data
    # command:
    #   # Save if 100 keys are added in every 10 seconds
    #   - "--save 10 100"
    #   # Set password
    #   - "--requirepass ${REDIS_PASSWORD}"

volumes:
  redis-data:
